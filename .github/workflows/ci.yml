name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # api_nest:
  #   runs_on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./api_nest
  #   stategy:
  #     matrix:
  #       node-version: [18.x, 20.x]
  #   steps:
  #   - user: actions/checkout@v5
  #   - name: User Node.js &{{ matrix.node-version }}
  #     user: actions/setup-node@v5
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   - name: Install Dependencies
  #     run: npm install
  #   - name: Run Tests
  #     run: npm test

  # frontend-next:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./frontend-next
  #   strategy:
  #     matrix:
  #       node-version: ${{ matrix.node-version }}
  #   steps:
  #   - uses: actions/checkout@v5
  #   - name: User Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v5
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   - name: Install Dependencies
  #     run: npm install
  #   - name: Build Project
  #     run: npm run build
  #   - name: Run tests
  #     run: npm test

  image_service:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./image_service

    strategy:
      matrix:
        python-version: ["3.12"]
    env:
      MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
      MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
      MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
      MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}
      MINIO_SECURE: ${{ secrets.MINIO_SECURE }}
      MONGO_HOST: ${{ secrets.MONGO_HOST }}
      MONGO_PORT: ${{ secrets.MONGO_PORT }}
      MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}

    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Start services with Docker Compose
        run: docker compose -f docker-compose.yml up -d

      - name: Cache uv dependencies
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install uv and dependencies
        run: |
          pip install uv
          uv venv
          uv sync

      - name: Run Tests
        run: |
          source .venv/bin/activate
          pytest
